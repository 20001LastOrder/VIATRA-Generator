/**
 * generated by Xtext 2.16.0
 */
package hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl;

import hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftLanguagePackage;
import hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.ComponentDefinition;
import hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.EventDeclaration;
import hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.EventDefinition;
import hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.InputEvent;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Component Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ComponentDefinitionImpl#getName <em>Name</em>}</li>
 *   <li>{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ComponentDefinitionImpl#getInputEvents <em>Input Events</em>}</li>
 *   <li>{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ComponentDefinitionImpl#getOutputEvents <em>Output Events</em>}</li>
 *   <li>{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ComponentDefinitionImpl#getEventDefinitions <em>Event Definitions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComponentDefinitionImpl extends MinimalEObjectImpl.Container implements ComponentDefinition
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getInputEvents() <em>Input Events</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInputEvents()
   * @generated
   * @ordered
   */
  protected EList<InputEvent> inputEvents;

  /**
   * The cached value of the '{@link #getOutputEvents() <em>Output Events</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutputEvents()
   * @generated
   * @ordered
   */
  protected EList<EventDeclaration> outputEvents;

  /**
   * The cached value of the '{@link #getEventDefinitions() <em>Event Definitions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEventDefinitions()
   * @generated
   * @ordered
   */
  protected EList<EventDefinition> eventDefinitions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComponentDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CftLanguagePackage.Literals.COMPONENT_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CftLanguagePackage.COMPONENT_DEFINITION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InputEvent> getInputEvents()
  {
    if (inputEvents == null)
    {
      inputEvents = new EObjectContainmentEList<InputEvent>(InputEvent.class, this, CftLanguagePackage.COMPONENT_DEFINITION__INPUT_EVENTS);
    }
    return inputEvents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EventDeclaration> getOutputEvents()
  {
    if (outputEvents == null)
    {
      outputEvents = new EObjectResolvingEList<EventDeclaration>(EventDeclaration.class, this, CftLanguagePackage.COMPONENT_DEFINITION__OUTPUT_EVENTS);
    }
    return outputEvents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EventDefinition> getEventDefinitions()
  {
    if (eventDefinitions == null)
    {
      eventDefinitions = new EObjectContainmentEList<EventDefinition>(EventDefinition.class, this, CftLanguagePackage.COMPONENT_DEFINITION__EVENT_DEFINITIONS);
    }
    return eventDefinitions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CftLanguagePackage.COMPONENT_DEFINITION__INPUT_EVENTS:
        return ((InternalEList<?>)getInputEvents()).basicRemove(otherEnd, msgs);
      case CftLanguagePackage.COMPONENT_DEFINITION__EVENT_DEFINITIONS:
        return ((InternalEList<?>)getEventDefinitions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CftLanguagePackage.COMPONENT_DEFINITION__NAME:
        return getName();
      case CftLanguagePackage.COMPONENT_DEFINITION__INPUT_EVENTS:
        return getInputEvents();
      case CftLanguagePackage.COMPONENT_DEFINITION__OUTPUT_EVENTS:
        return getOutputEvents();
      case CftLanguagePackage.COMPONENT_DEFINITION__EVENT_DEFINITIONS:
        return getEventDefinitions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CftLanguagePackage.COMPONENT_DEFINITION__NAME:
        setName((String)newValue);
        return;
      case CftLanguagePackage.COMPONENT_DEFINITION__INPUT_EVENTS:
        getInputEvents().clear();
        getInputEvents().addAll((Collection<? extends InputEvent>)newValue);
        return;
      case CftLanguagePackage.COMPONENT_DEFINITION__OUTPUT_EVENTS:
        getOutputEvents().clear();
        getOutputEvents().addAll((Collection<? extends EventDeclaration>)newValue);
        return;
      case CftLanguagePackage.COMPONENT_DEFINITION__EVENT_DEFINITIONS:
        getEventDefinitions().clear();
        getEventDefinitions().addAll((Collection<? extends EventDefinition>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CftLanguagePackage.COMPONENT_DEFINITION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case CftLanguagePackage.COMPONENT_DEFINITION__INPUT_EVENTS:
        getInputEvents().clear();
        return;
      case CftLanguagePackage.COMPONENT_DEFINITION__OUTPUT_EVENTS:
        getOutputEvents().clear();
        return;
      case CftLanguagePackage.COMPONENT_DEFINITION__EVENT_DEFINITIONS:
        getEventDefinitions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CftLanguagePackage.COMPONENT_DEFINITION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case CftLanguagePackage.COMPONENT_DEFINITION__INPUT_EVENTS:
        return inputEvents != null && !inputEvents.isEmpty();
      case CftLanguagePackage.COMPONENT_DEFINITION__OUTPUT_EVENTS:
        return outputEvents != null && !outputEvents.isEmpty();
      case CftLanguagePackage.COMPONENT_DEFINITION__EVENT_DEFINITIONS:
        return eventDefinitions != null && !eventDefinitions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ComponentDefinitionImpl
