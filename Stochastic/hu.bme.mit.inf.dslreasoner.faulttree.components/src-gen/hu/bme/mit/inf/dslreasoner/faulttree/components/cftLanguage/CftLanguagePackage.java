/**
 * generated by Xtext 2.16.0
 */
package hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftLanguageFactory
 * @model kind="package"
 * @generated
 */
public interface CftLanguagePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "cftLanguage";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.bme.hu/mit/inf/dslreasoner/faulttree/components/CftLanguage";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "cftLanguage";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  CftLanguagePackage eINSTANCE = hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl.init();

  /**
   * The meta object id for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftModelImpl <em>Cft Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftModelImpl
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getCftModel()
   * @generated
   */
  int CFT_MODEL = 0;

  /**
   * The feature id for the '<em><b>Package Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CFT_MODEL__PACKAGE_NAME = 0;

  /**
   * The feature id for the '<em><b>Imports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CFT_MODEL__IMPORTS = 1;

  /**
   * The feature id for the '<em><b>Component Definitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CFT_MODEL__COMPONENT_DEFINITIONS = 2;

  /**
   * The feature id for the '<em><b>Transformation Definitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CFT_MODEL__TRANSFORMATION_DEFINITIONS = 3;

  /**
   * The number of structural features of the '<em>Cft Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CFT_MODEL_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ImportDeclarationImpl <em>Import Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ImportDeclarationImpl
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getImportDeclaration()
   * @generated
   */
  int IMPORT_DECLARATION = 1;

  /**
   * The feature id for the '<em><b>Imported Namespace</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_DECLARATION__IMPORTED_NAMESPACE = 0;

  /**
   * The number of structural features of the '<em>Import Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_DECLARATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.TransformationDefinitionImpl <em>Transformation Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.TransformationDefinitionImpl
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getTransformationDefinition()
   * @generated
   */
  int TRANSFORMATION_DEFINITION = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSFORMATION_DEFINITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Mapping Definitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSFORMATION_DEFINITION__MAPPING_DEFINITIONS = 1;

  /**
   * The number of structural features of the '<em>Transformation Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSFORMATION_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.MappingDefinitionImpl <em>Mapping Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.MappingDefinitionImpl
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getMappingDefinition()
   * @generated
   */
  int MAPPING_DEFINITION = 3;

  /**
   * The feature id for the '<em><b>Top Level</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_DEFINITION__TOP_LEVEL = 0;

  /**
   * The feature id for the '<em><b>Pattern</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_DEFINITION__PATTERN = 1;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_DEFINITION__PARAMETERS = 2;

  /**
   * The feature id for the '<em><b>Component Instance</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_DEFINITION__COMPONENT_INSTANCE = 3;

  /**
   * The feature id for the '<em><b>Lookup Definitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_DEFINITION__LOOKUP_DEFINITIONS = 4;

  /**
   * The feature id for the '<em><b>Assignments</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_DEFINITION__ASSIGNMENTS = 5;

  /**
   * The number of structural features of the '<em>Mapping Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_DEFINITION_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.MappingParameterImpl <em>Mapping Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.MappingParameterImpl
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getMappingParameter()
   * @generated
   */
  int MAPPING_PARAMETER = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_PARAMETER__NAME = 0;

  /**
   * The number of structural features of the '<em>Mapping Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_PARAMETER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.VariableImpl
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__NAME = 0;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.LookupDefinitionImpl <em>Lookup Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.LookupDefinitionImpl
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getLookupDefinition()
   * @generated
   */
  int LOOKUP_DEFINITION = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOKUP_DEFINITION__NAME = VARIABLE__NAME;

  /**
   * The feature id for the '<em><b>Mapping</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOKUP_DEFINITION__MAPPING = VARIABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Arguments</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOKUP_DEFINITION__ARGUMENTS = VARIABLE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Lookup Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOKUP_DEFINITION_FEATURE_COUNT = VARIABLE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.AssignmentImpl <em>Assignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.AssignmentImpl
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getAssignment()
   * @generated
   */
  int ASSIGNMENT = 7;

  /**
   * The feature id for the '<em><b>Input</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__INPUT = 0;

  /**
   * The feature id for the '<em><b>Multiple</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__MULTIPLE = 1;

  /**
   * The feature id for the '<em><b>Output</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__OUTPUT = 2;

  /**
   * The number of structural features of the '<em>Assignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.EventReferenceImpl <em>Event Reference</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.EventReferenceImpl
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getEventReference()
   * @generated
   */
  int EVENT_REFERENCE = 8;

  /**
   * The feature id for the '<em><b>Component</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT_REFERENCE__COMPONENT = 0;

  /**
   * The feature id for the '<em><b>Event</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT_REFERENCE__EVENT = 1;

  /**
   * The number of structural features of the '<em>Event Reference</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EVENT_REFERENCE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ComponentInstanceImpl <em>Component Instance</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ComponentInstanceImpl
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getComponentInstance()
   * @generated
   */
  int COMPONENT_INSTANCE = 9;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_INSTANCE__NAME = VARIABLE__NAME;

  /**
   * The feature id for the '<em><b>Component Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_INSTANCE__COMPONENT_TYPE = VARIABLE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Component Instance</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_INSTANCE_FEATURE_COUNT = VARIABLE_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftModel <em>Cft Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cft Model</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftModel
   * @generated
   */
  EClass getCftModel();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftModel#getPackageName <em>Package Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Package Name</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftModel#getPackageName()
   * @see #getCftModel()
   * @generated
   */
  EAttribute getCftModel_PackageName();

  /**
   * Returns the meta object for the containment reference list '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftModel#getImports <em>Imports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Imports</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftModel#getImports()
   * @see #getCftModel()
   * @generated
   */
  EReference getCftModel_Imports();

  /**
   * Returns the meta object for the containment reference list '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftModel#getComponentDefinitions <em>Component Definitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Component Definitions</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftModel#getComponentDefinitions()
   * @see #getCftModel()
   * @generated
   */
  EReference getCftModel_ComponentDefinitions();

  /**
   * Returns the meta object for the containment reference list '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftModel#getTransformationDefinitions <em>Transformation Definitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Transformation Definitions</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.CftModel#getTransformationDefinitions()
   * @see #getCftModel()
   * @generated
   */
  EReference getCftModel_TransformationDefinitions();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.ImportDeclaration <em>Import Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import Declaration</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.ImportDeclaration
   * @generated
   */
  EClass getImportDeclaration();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.ImportDeclaration#getImportedNamespace <em>Imported Namespace</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Imported Namespace</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.ImportDeclaration#getImportedNamespace()
   * @see #getImportDeclaration()
   * @generated
   */
  EAttribute getImportDeclaration_ImportedNamespace();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.TransformationDefinition <em>Transformation Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Transformation Definition</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.TransformationDefinition
   * @generated
   */
  EClass getTransformationDefinition();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.TransformationDefinition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.TransformationDefinition#getName()
   * @see #getTransformationDefinition()
   * @generated
   */
  EAttribute getTransformationDefinition_Name();

  /**
   * Returns the meta object for the containment reference list '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.TransformationDefinition#getMappingDefinitions <em>Mapping Definitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Mapping Definitions</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.TransformationDefinition#getMappingDefinitions()
   * @see #getTransformationDefinition()
   * @generated
   */
  EReference getTransformationDefinition_MappingDefinitions();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition <em>Mapping Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mapping Definition</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition
   * @generated
   */
  EClass getMappingDefinition();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#isTopLevel <em>Top Level</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Top Level</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#isTopLevel()
   * @see #getMappingDefinition()
   * @generated
   */
  EAttribute getMappingDefinition_TopLevel();

  /**
   * Returns the meta object for the reference '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#getPattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Pattern</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#getPattern()
   * @see #getMappingDefinition()
   * @generated
   */
  EReference getMappingDefinition_Pattern();

  /**
   * Returns the meta object for the containment reference list '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#getParameters()
   * @see #getMappingDefinition()
   * @generated
   */
  EReference getMappingDefinition_Parameters();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#getComponentInstance <em>Component Instance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Component Instance</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#getComponentInstance()
   * @see #getMappingDefinition()
   * @generated
   */
  EReference getMappingDefinition_ComponentInstance();

  /**
   * Returns the meta object for the containment reference list '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#getLookupDefinitions <em>Lookup Definitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Lookup Definitions</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#getLookupDefinitions()
   * @see #getMappingDefinition()
   * @generated
   */
  EReference getMappingDefinition_LookupDefinitions();

  /**
   * Returns the meta object for the containment reference list '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#getAssignments <em>Assignments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Assignments</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingDefinition#getAssignments()
   * @see #getMappingDefinition()
   * @generated
   */
  EReference getMappingDefinition_Assignments();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingParameter <em>Mapping Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mapping Parameter</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingParameter
   * @generated
   */
  EClass getMappingParameter();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingParameter#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.MappingParameter#getName()
   * @see #getMappingParameter()
   * @generated
   */
  EAttribute getMappingParameter_Name();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.LookupDefinition <em>Lookup Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Lookup Definition</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.LookupDefinition
   * @generated
   */
  EClass getLookupDefinition();

  /**
   * Returns the meta object for the reference '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.LookupDefinition#getMapping <em>Mapping</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Mapping</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.LookupDefinition#getMapping()
   * @see #getLookupDefinition()
   * @generated
   */
  EReference getLookupDefinition_Mapping();

  /**
   * Returns the meta object for the reference list '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.LookupDefinition#getArguments <em>Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Arguments</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.LookupDefinition#getArguments()
   * @see #getLookupDefinition()
   * @generated
   */
  EReference getLookupDefinition_Arguments();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Variable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Variable#getName()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Name();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Assignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assignment</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Assignment
   * @generated
   */
  EClass getAssignment();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Assignment#getInput <em>Input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Input</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Assignment#getInput()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Input();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Assignment#isMultiple <em>Multiple</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Multiple</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Assignment#isMultiple()
   * @see #getAssignment()
   * @generated
   */
  EAttribute getAssignment_Multiple();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Assignment#getOutput <em>Output</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Output</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.Assignment#getOutput()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Output();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.EventReference <em>Event Reference</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Event Reference</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.EventReference
   * @generated
   */
  EClass getEventReference();

  /**
   * Returns the meta object for the reference '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.EventReference#getComponent <em>Component</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Component</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.EventReference#getComponent()
   * @see #getEventReference()
   * @generated
   */
  EReference getEventReference_Component();

  /**
   * Returns the meta object for the reference '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.EventReference#getEvent <em>Event</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Event</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.EventReference#getEvent()
   * @see #getEventReference()
   * @generated
   */
  EReference getEventReference_Event();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.ComponentInstance <em>Component Instance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Component Instance</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.ComponentInstance
   * @generated
   */
  EClass getComponentInstance();

  /**
   * Returns the meta object for the reference '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.ComponentInstance#getComponentType <em>Component Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Component Type</em>'.
   * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.ComponentInstance#getComponentType()
   * @see #getComponentInstance()
   * @generated
   */
  EReference getComponentInstance_ComponentType();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  CftLanguageFactory getCftLanguageFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftModelImpl <em>Cft Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftModelImpl
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getCftModel()
     * @generated
     */
    EClass CFT_MODEL = eINSTANCE.getCftModel();

    /**
     * The meta object literal for the '<em><b>Package Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CFT_MODEL__PACKAGE_NAME = eINSTANCE.getCftModel_PackageName();

    /**
     * The meta object literal for the '<em><b>Imports</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CFT_MODEL__IMPORTS = eINSTANCE.getCftModel_Imports();

    /**
     * The meta object literal for the '<em><b>Component Definitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CFT_MODEL__COMPONENT_DEFINITIONS = eINSTANCE.getCftModel_ComponentDefinitions();

    /**
     * The meta object literal for the '<em><b>Transformation Definitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CFT_MODEL__TRANSFORMATION_DEFINITIONS = eINSTANCE.getCftModel_TransformationDefinitions();

    /**
     * The meta object literal for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ImportDeclarationImpl <em>Import Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ImportDeclarationImpl
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getImportDeclaration()
     * @generated
     */
    EClass IMPORT_DECLARATION = eINSTANCE.getImportDeclaration();

    /**
     * The meta object literal for the '<em><b>Imported Namespace</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT_DECLARATION__IMPORTED_NAMESPACE = eINSTANCE.getImportDeclaration_ImportedNamespace();

    /**
     * The meta object literal for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.TransformationDefinitionImpl <em>Transformation Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.TransformationDefinitionImpl
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getTransformationDefinition()
     * @generated
     */
    EClass TRANSFORMATION_DEFINITION = eINSTANCE.getTransformationDefinition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TRANSFORMATION_DEFINITION__NAME = eINSTANCE.getTransformationDefinition_Name();

    /**
     * The meta object literal for the '<em><b>Mapping Definitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRANSFORMATION_DEFINITION__MAPPING_DEFINITIONS = eINSTANCE.getTransformationDefinition_MappingDefinitions();

    /**
     * The meta object literal for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.MappingDefinitionImpl <em>Mapping Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.MappingDefinitionImpl
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getMappingDefinition()
     * @generated
     */
    EClass MAPPING_DEFINITION = eINSTANCE.getMappingDefinition();

    /**
     * The meta object literal for the '<em><b>Top Level</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MAPPING_DEFINITION__TOP_LEVEL = eINSTANCE.getMappingDefinition_TopLevel();

    /**
     * The meta object literal for the '<em><b>Pattern</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAPPING_DEFINITION__PATTERN = eINSTANCE.getMappingDefinition_Pattern();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAPPING_DEFINITION__PARAMETERS = eINSTANCE.getMappingDefinition_Parameters();

    /**
     * The meta object literal for the '<em><b>Component Instance</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAPPING_DEFINITION__COMPONENT_INSTANCE = eINSTANCE.getMappingDefinition_ComponentInstance();

    /**
     * The meta object literal for the '<em><b>Lookup Definitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAPPING_DEFINITION__LOOKUP_DEFINITIONS = eINSTANCE.getMappingDefinition_LookupDefinitions();

    /**
     * The meta object literal for the '<em><b>Assignments</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAPPING_DEFINITION__ASSIGNMENTS = eINSTANCE.getMappingDefinition_Assignments();

    /**
     * The meta object literal for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.MappingParameterImpl <em>Mapping Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.MappingParameterImpl
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getMappingParameter()
     * @generated
     */
    EClass MAPPING_PARAMETER = eINSTANCE.getMappingParameter();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MAPPING_PARAMETER__NAME = eINSTANCE.getMappingParameter_Name();

    /**
     * The meta object literal for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.LookupDefinitionImpl <em>Lookup Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.LookupDefinitionImpl
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getLookupDefinition()
     * @generated
     */
    EClass LOOKUP_DEFINITION = eINSTANCE.getLookupDefinition();

    /**
     * The meta object literal for the '<em><b>Mapping</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOKUP_DEFINITION__MAPPING = eINSTANCE.getLookupDefinition_Mapping();

    /**
     * The meta object literal for the '<em><b>Arguments</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOKUP_DEFINITION__ARGUMENTS = eINSTANCE.getLookupDefinition_Arguments();

    /**
     * The meta object literal for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.VariableImpl
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__NAME = eINSTANCE.getVariable_Name();

    /**
     * The meta object literal for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.AssignmentImpl <em>Assignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.AssignmentImpl
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getAssignment()
     * @generated
     */
    EClass ASSIGNMENT = eINSTANCE.getAssignment();

    /**
     * The meta object literal for the '<em><b>Input</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__INPUT = eINSTANCE.getAssignment_Input();

    /**
     * The meta object literal for the '<em><b>Multiple</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSIGNMENT__MULTIPLE = eINSTANCE.getAssignment_Multiple();

    /**
     * The meta object literal for the '<em><b>Output</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__OUTPUT = eINSTANCE.getAssignment_Output();

    /**
     * The meta object literal for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.EventReferenceImpl <em>Event Reference</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.EventReferenceImpl
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getEventReference()
     * @generated
     */
    EClass EVENT_REFERENCE = eINSTANCE.getEventReference();

    /**
     * The meta object literal for the '<em><b>Component</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EVENT_REFERENCE__COMPONENT = eINSTANCE.getEventReference_Component();

    /**
     * The meta object literal for the '<em><b>Event</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EVENT_REFERENCE__EVENT = eINSTANCE.getEventReference_Event();

    /**
     * The meta object literal for the '{@link hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ComponentInstanceImpl <em>Component Instance</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.ComponentInstanceImpl
     * @see hu.bme.mit.inf.dslreasoner.faulttree.components.cftLanguage.impl.CftLanguagePackageImpl#getComponentInstance()
     * @generated
     */
    EClass COMPONENT_INSTANCE = eINSTANCE.getComponentInstance();

    /**
     * The meta object literal for the '<em><b>Component Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT_INSTANCE__COMPONENT_TYPE = eINSTANCE.getComponentInstance_ComponentType();

  }

} //CftLanguagePackage
