problem {
	basepath <model>
	metamodel <hu.bme.mit.inf.dslreasoner.domains.cps.CpsPackage>
	model <problem.xmi>
}

goal {
	objective TotalCost minimise java { "hu.bme.mit.inf.dslreasoner.domains.cps.mdeo.TotalCostFitnessFunction" }
	constraint NotSatisfiedRequriements java { "hu.bme.mit.inf.dslreasoner.domains.cps.mdeo.NotSatisfiedRequirementsConstraint" }
	constraint NotAllocatedAppInstances java { "hu.bme.mit.inf.dslreasoner.domains.cps.mdeo.NotAllocatedAppInstancesConstraint" }
	constraint NonRedundantAllocations java { "hu.bme.mit.inf.dslreasoner.domains.cps.mdeo.NonRedundantAllocationsConstraint" }
	constraint UnavailableMemory java { "hu.bme.mit.inf.dslreasoner.domains.cps.mdeo.UnavailableMemoryConstraint" }
	constraint UnavailableHdd java { "hu.bme.mit.inf.dslreasoner.domains.cps.mdeo.UnavailableHddConstraint" }
	constraint TooLowAverageMemory java { "hu.bme.mit.inf.dslreasoner.domains.cps.mdeo.TooLowAverageMemoryConstraint" }
	constraint TooLowAverageHdd java { "hu.bme.mit.inf.dslreasoner.domains.cps.mdeo.TooLowAverageHddConstraint" }
}

search {
//	mutate using <cps.henshin> unit "createAppInstance"
//	mutate using <cps.henshin> unit "createHostInstance"
//	mutate using <cps.henshin> unit "allocate"
//	mutate using <cps.henshin> unit "deleteAppInstance"
//	mutate using <cps.henshin> unit "unallocate"
	mutate { "ApplicationInstance" }
	mutate { "HostInstance" }
}

solver {
	optimisation provider moea algorithm NSGAII {
		variation: mutation
		population: 25
		mutation.step: 3
		mutation.strategy: random
	}

	termination {
		time: 120
	}

	batches 1
}
